// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_dist
NumericMatrix rcpp_dist(NumericMatrix x, int dist_method);
RcppExport SEXP _RcppHelp_rcpp_dist(SEXP xSEXP, SEXP dist_methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dist_method(dist_methodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_dist(x, dist_method));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_algo
IntegerVector rcpp_algo(NumericMatrix x, NumericMatrix dist);
RcppExport SEXP _RcppHelp_rcpp_algo(SEXP xSEXP, SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dist(distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_algo(x, dist));
    return rcpp_result_gen;
END_RCPP
}
// rcppParAlgo
IntegerMatrix rcppParAlgo(NumericMatrix x);
RcppExport SEXP _RcppHelp_rcppParAlgo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppParAlgo(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppHelp_rcpp_dist", (DL_FUNC) &_RcppHelp_rcpp_dist, 2},
    {"_RcppHelp_rcpp_algo", (DL_FUNC) &_RcppHelp_rcpp_algo, 2},
    {"_RcppHelp_rcppParAlgo", (DL_FUNC) &_RcppHelp_rcppParAlgo, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppHelp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
